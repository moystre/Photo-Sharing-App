{"remainingRequest":"D:\\Documents\\VS Code Projects\\photo-sharing-app\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\Documents\\VS Code Projects\\photo-sharing-app\\node_modules\\@firebase\\firestore\\dist\\esm\\src\\model\\document_key.js","dependencies":[{"path":"D:\\Documents\\VS Code Projects\\photo-sharing-app\\node_modules\\@firebase\\firestore\\dist\\esm\\src\\model\\document_key.js","mtime":1519691373865},{"path":"D:\\Documents\\VS Code Projects\\photo-sharing-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1518892899207},{"path":"D:\\Documents\\VS Code Projects\\photo-sharing-app\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1518892910875}],"contextDependencies":[],"result":["/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { assert } from '../util/assert';\r\nimport { ResourcePath } from './path';\r\nvar DocumentKey = /*@__PURE__*/ (function () {\r\n    function DocumentKey(path) {\r\n        this.path = path;\r\n        assert(DocumentKey.isDocumentKey(path), 'Invalid DocumentKey with an odd number of segments: ' +\r\n            path.toArray().join('/'));\r\n    }\r\n    DocumentKey.prototype.isEqual = function (other) {\r\n        return (other !== null && ResourcePath.comparator(this.path, other.path) === 0);\r\n    };\r\n    DocumentKey.prototype.toString = function () {\r\n        return this.path.toString();\r\n    };\r\n    DocumentKey.comparator = function (k1, k2) {\r\n        return ResourcePath.comparator(k1.path, k2.path);\r\n    };\r\n    DocumentKey.isDocumentKey = function (path) {\r\n        return path.length % 2 === 0;\r\n    };\r\n    /**\r\n     * Creates and returns a new document key with the given segments.\r\n     *\r\n     * @param path The segments of the path to the document\r\n     * @return A new instance of DocumentKey\r\n     */\r\n    DocumentKey.fromSegments = function (segments) {\r\n        return new DocumentKey(new ResourcePath(segments.slice()));\r\n    };\r\n    /**\r\n     * Creates and returns a new document key using '/' to split the string into\r\n     * segments.\r\n     *\r\n     * @param path The slash-separated path string to the document\r\n     * @return A new instance of DocumentKey\r\n     */\r\n    DocumentKey.fromPathString = function (path) {\r\n        return new DocumentKey(ResourcePath.fromString(path));\r\n    };\r\n    DocumentKey.EMPTY = new DocumentKey(new ResourcePath([]));\r\n    return DocumentKey;\r\n}());\r\nexport { DocumentKey };\r\n//# sourceMappingURL=document_key.js.map\r\n",null]}