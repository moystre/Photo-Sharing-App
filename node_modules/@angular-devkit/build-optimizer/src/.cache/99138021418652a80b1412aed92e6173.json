{"remainingRequest":"D:\\Documents\\VS Code Projects\\photo-sharing-app\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\Documents\\VS Code Projects\\photo-sharing-app\\node_modules\\angularfire2\\firestore\\collection\\collection.js","dependencies":[{"path":"D:\\Documents\\VS Code Projects\\photo-sharing-app\\node_modules\\angularfire2\\firestore\\collection\\collection.js","mtime":1519691369379},{"path":"D:\\Documents\\VS Code Projects\\photo-sharing-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1518892899207},{"path":"D:\\Documents\\VS Code Projects\\photo-sharing-app\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1518892910875}],"contextDependencies":[],"result":["import { fromCollectionRef } from '../observable/fromRef';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/filter';\r\nimport { docChanges, sortedChanges } from './changes';\r\nimport { AngularFirestoreDocument } from '../document/document';\r\nexport function validateEventsArray(events) {\r\n    if (!events || events.length === 0) {\r\n        events = ['added', 'removed', 'modified'];\r\n    }\r\n    return events;\r\n}\r\nvar AngularFirestoreCollection = /*@__PURE__*/ (function () {\r\n    function AngularFirestoreCollection(ref, query) {\r\n        this.ref = ref;\r\n        this.query = query;\r\n    }\r\n    AngularFirestoreCollection.prototype.stateChanges = function (events) {\r\n        if (!events || events.length === 0) {\r\n            return docChanges(this.query);\r\n        }\r\n        return docChanges(this.query)\r\n            .map(function (actions) { return actions.filter(function (change) { return events.indexOf(change.type) > -1; }); })\r\n            .filter(function (changes) { return changes.length > 0; });\r\n    };\r\n    AngularFirestoreCollection.prototype.auditTrail = function (events) {\r\n        return this.stateChanges(events).scan(function (current, action) { return current.concat(action); }, []);\r\n    };\r\n    AngularFirestoreCollection.prototype.snapshotChanges = function (events) {\r\n        events = validateEventsArray(events);\r\n        return sortedChanges(this.query, events);\r\n    };\r\n    AngularFirestoreCollection.prototype.valueChanges = function (events) {\r\n        return fromCollectionRef(this.query)\r\n            .map(function (actions) { return actions.payload.docs.map(function (a) { return a.data(); }); });\r\n    };\r\n    AngularFirestoreCollection.prototype.add = function (data) {\r\n        return this.ref.add(data);\r\n    };\r\n    AngularFirestoreCollection.prototype.doc = function (path) {\r\n        return new AngularFirestoreDocument(this.ref.doc(path));\r\n    };\r\n    return AngularFirestoreCollection;\r\n}());\r\nexport { AngularFirestoreCollection };\r\n//# sourceMappingURL=collection.js.map \r\n",null]}